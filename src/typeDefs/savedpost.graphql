type Query {
    getSavedPostByUser(userId: String): [SavedPost]
    checkIsSaved(id: SavedPostInput): Boolean
}

type Mutation {
    createAndDeleteSavedPost(id: SavedPostInput, post: PostInput): Boolean
    deleteAllSaved: Boolean
}
type SavedPost {
  _id: SavedPostId
  post: PostRespone
}
input SavedPostInput {
    userId: String
    postId: String
}
type SavedPostId{
    userId: String
    postId: String
}
input CommunityInput {
  _id: ID
  name: String
  avatar: String
  coverPhoto: String
  isActive: Boolean
  createdAt: Float
  createdBy: ID
  updatedAt: Float
  updatedBy: ID
  deletedAt: Float
  deletedBy: ID
}

input ExpertInput {
  _id: ID
  areasOfExpertise: String
  jobTitle: String
  yearsExperience: Int
  isVerify: Boolean
}
input UserInput{
  _id: ID
  firstname: String
  lastname: String
  gender: Gender
  birthday: Float
  expert: ExpertInput
  phoneNumber: String
  avatar: String
}
input PostInput {
  _id: ID
  title: String
  content: String
  thumbnail: String
  community: CommunityInput
  isActive: Boolean
  createdAt: Float
  createdBy: UserInput
  updatedAt: Float
  updatedBy: UserInput
  deletedAt: Float
  deletedBy: UserInput
}